// Code generated by command: go run goasm_gen.go -out loops.s -stubs stub.go. DO NOT EDIT.

#include "textflag.h"

// func Read_4x2_go(repeatCount uint64, bb []byte)
TEXT ·Read_4x2_go(SB), NOSPLIT, $0-32
	MOVQ repeatCount+0(FP), AX
	MOVQ bb_base+8(FP), CX

loop:
	MOVL (CX), BX
	MOVL 4(CX), BX
	ADDQ $0x08, DX
	CMPQ DX, AX
	JB   loop
	RET

// func Read_8x2_go(repeatCount uint64, bb []byte)
TEXT ·Read_8x2_go(SB), NOSPLIT, $0-32
	MOVQ repeatCount+0(FP), AX
	MOVQ bb_base+8(FP), CX

loop:
	MOVQ (CX), BX
	MOVQ 8(CX), BX
	ADDQ $0x10, DX
	CMPQ DX, AX
	JB   loop
	RET

// func Read_16x2_go(repeatCount uint64, bb []byte)
// Requires: AVX
TEXT ·Read_16x2_go(SB), NOSPLIT, $0-32
	MOVQ repeatCount+0(FP), AX
	MOVQ bb_base+8(FP), CX

loop:
	VMOVDQU (CX), X0
	VMOVDQU 16(CX), X1
	ADDQ    $0x20, DX
	CMPQ    DX, AX
	JB      loop
	RET

// func Read_32x2_go(repeatCount uint64, bb []byte)
// Requires: AVX
TEXT ·Read_32x2_go(SB), NOSPLIT, $0-32
	MOVQ repeatCount+0(FP), AX
	MOVQ bb_base+8(FP), CX

loop:
	VMOVDQU (CX), Y0
	VMOVDQU 32(CX), Y1
	ADDQ    $0x40, DX
	CMPQ    DX, AX
	JB      loop
	RET

// func ReadSuccessiveSizes_go(repeatCount uint64, bb []byte, offsetMask uint64)
// Requires: AVX
TEXT ·ReadSuccessiveSizes_go(SB), NOSPLIT, $0-40
	MOVQ repeatCount+0(FP), AX
	MOVQ bb_base+8(FP), CX
	MOVQ offsetMask+32(FP), DX
	XORQ DI, DI
	XORQ BX, BX

loop:
	MOVQ    CX, SI
	ADDQ    BX, SI
	VMOVDQU (SI), Y0
	VMOVDQU 32(SI), Y0
	VMOVDQU 64(SI), Y0
	VMOVDQU 96(SI), Y0
	VMOVDQU 128(SI), Y0
	VMOVDQU 160(SI), Y0
	VMOVDQU 192(SI), Y0
	VMOVDQU 224(SI), Y0
	VMOVDQU 256(SI), Y0
	VMOVDQU 288(SI), Y0
	VMOVDQU 320(SI), Y0
	VMOVDQU 352(SI), Y0
	VMOVDQU 384(SI), Y0
	VMOVDQU 416(SI), Y0
	VMOVDQU 448(SI), Y0
	VMOVDQU 480(SI), Y0
	ADDQ    $0x00000200, DI
	MOVQ    DI, BX
	ANDQ    DX, BX
	CMPQ    DI, AX
	JB      loop
	RET
